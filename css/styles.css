/* контейнер просто содержит узлы.
 Узел сам будет отвечать за свой отступ */
.Container {
        padding: 0;
        margin: 0;
}

.Container li {
        list-style-type: none; /* убрать кружочки/точечки */
}
/* узел отодвинут от левой стенки контейнера на 18px
    благодаря этим отступам вложенные узлы формируют иерархию
 */
.Node {
    margin-left: 18px;
    zoom: 1;
    /* линия слева образуется повторяющимся фоновым рисунком */
    background-image : url(/images/tree/i.gif);
    background-position : top left;
    background-repeat : repeat-y;
}

/* это правило - ниже .Node, поэтому имеет больший приоритет */
.IsLast {
    /* добавить соединительную черточку наверх */
    background-image: url(/images/tree/i_half.gif);
    background-repeat : no-repeat;
}

/* Корневой узел от родительского контейнера не отодвинут. 
   Ему же не надо демонстрировать отступом, чей он сын.
   Это правило идет после .Node, поэтому имеет более высокий приоритет 
   Так что class="Node IsRoot" дает margin-left:0
*/ 
.IsRoot {
    margin-left: 0;
}
/* иконка скрытого/раскрытого поддерева или листа
    сами иконки идут дальше, здесь общие свойства
 */
.Expand {
    width: 18px;
    height: 18px;
    /* принцип двухколоночной верстки. */
    /* float:left и width дива Expand + margin-left дива Content */
    float: left; 
}

/* содержание (заголовок) узла */
 .Content {
    /* чтобы не налезать на Expand */
    margin-left:18px;
    /* высота заголовка - как минимум равна Expand 
        Т.е правая колонка всегда выше или равна левой.
        Иначе нижний float будет пытаться разместиться на получившейся ступеньке
    */    
    min-height: 18px; 
}

 /* все правила после * html выполняет только IE6 */
* html .Content {
    height: 18px; /* аналог min-height для IE6 */
}
/* открытое поддерево */
.ExpandOpen .Expand {  
    background-image: url(/images/tree/minus.gif);  
}

/* закрытое поддерево */
.ExpandClosed .Expand {
    background-image: url(/images/tree/plus.gif);
}

/* лист */
.ExpandLeaf .Expand {
    background-image: url(/images/tree/leaf.gif);
}
.ExpandOpen .Container {
    display: block;
}

.ExpandClosed .Container {
    display: none;
}
.ExpandOpen .Expand, .ExpandClosed .Expand {
    cursor: pointer; /* иконки скрытия-раскрытия */
}

.ExpandLeaf .Expand {
    cursor: auto; /* листовой узел */
}
.ExpandLoading   {
    width: 18px;
    height: 18px;
    float: left;
    background-image: url(images/tree/loading.gif);
}
/* Общий размер 14+2+2 = 18 - такой же как Expand */
.Node input {
    width: 14px;
    height: 14px;
    float: left; 
    margin: 2px;
}
/* подвинем за оба float'а Node, Content */
.Node, .Content {
    margin-left: 36px;
}
/* заново переопределим .IsRoot */
.IsRoot { margin-left: 0; }
